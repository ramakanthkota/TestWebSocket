{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "An AWS Serverless Application.",
  "Parameters": {
     "EnvironmentName": {
          "Type": "String",
          "Description": "Sets the ASPNETCORE_ENVIRONMENT variable as well as the API's StageName to this.",
          "MinLength": "0"
        },
     "SAMAlias":{
        "Type": "String",
        "Default": "live"
        }
    },
  "Resources": {
    "OnConnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "TestAWSWebSocketApi::TestAWSWebSocketApi.Functions::OnConnectHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "AutoPublishAlias":{
            "Ref":"SAMAlias"
        },
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Environment": {
          "Variables": {
            "ASPNETCORE_ENVIRONMENT": {
              "Ref": "EnvironmentName"
            }
          }
        }
      }
    },
    "OnDisconnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "TestAWSWebSocketApi::TestAWSWebSocketApi.Functions::OnDisconnectHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "AutoPublishAlias":{
            "Ref":"SAMAlias"
        },
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Environment": {
          "Variables": {
            "ASPNETCORE_ENVIRONMENT": {
              "Ref": "EnvironmentName"
            }
          }
        }
      }
    },
    "SendMessageFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "TestAWSWebSocketApi::TestAWSWebSocketApi.Functions::SendMessageHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "AutoPublishAlias":{
            "Ref":"SAMAlias"
        },
        "Role": null,
        "Environment": {
          "Variables": {
            "ASPNETCORE_ENVIRONMENT": {
              "Ref": "EnvironmentName"
            }
          }
        }        
      }
    },
    "OnBlockFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "TestAWSWebSocketApi::TestAWSWebSocketApi.Functions::OnBlockHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "AutoPublishAlias":{
            "Ref":"SAMAlias"
        },
        "Role": null,
        "Environment": {
          "Variables": {
            "ASPNETCORE_ENVIRONMENT": {
              "Ref": "EnvironmentName"
            }
          }
        }        
      }
    },
    "OnReactionFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "TestAWSWebSocketApi::TestAWSWebSocketApi.Functions::OnReactionHandler",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "AutoPublishAlias":{
            "Ref":"SAMAlias"
        },
        "Role": null,
        "Environment": {
          "Variables": {
            "ASPNETCORE_ENVIRONMENT": {
              "Ref": "EnvironmentName"
            }
          }
        }        
      }
    },
    "TestChatWebSocketApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "SimpleChatWebSocket",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action"
      }
    },
    "ConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "NONE",
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectInteg"
              }
            ]
          ]
        }
      }
    },
    "ConnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function":{
               "Fn::Join":[
                    ":",
                    [
                        {
                        "Fn::GetAtt":[
                            "OnConnectFunction",
                            "Arn"
                        ]
                        },
                        { "Ref":"SAMAlias" }
                    ]
                ]
              }            
            }
          ]
        }
      }
    },
    "DisconnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "OperationName": "DisconnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectInteg"
              }
            ]
          ]
        }
      }
    },
    "DisconnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function":{
                "Fn::Join":[
                    ":",
                    [
                        {
                        "Fn::GetAtt":[
                            "OnDisconnectFunction",
                            "Arn"
                        ]
                        },
                        { "Ref":"SAMAlias" }
                    ]
                ]
              }            
            }
          ]
        }
      }
    },
    "SendMessageRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "RouteKey": "sendmessage",
        "AuthorizationType": "NONE",
        "OperationName": "SendMessageRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "SendMessageInteg"
              }
            ]
          ]
        }
      }
    },
    "SendMessageInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
               "Fn::Join":[
                    ":",
                    [
                        {
                        "Fn::GetAtt":[
                            "SendMessageFunction",
                            "Arn"
                        ]
                        },
                        { "Ref":"SAMAlias" }
                    ]
                ]
              }
            }
          ]
        }
      }
    },
    "OnBlockRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "RouteKey": "block",
        "AuthorizationType": "NONE",
        "OperationName": "OnBlockRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "OnBlockInteg"
              }
            ]
          ]
        }
      }
    },
    "OnBlockInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
               "Fn::Join":[
                    ":",
                    [
                        {
                        "Fn::GetAtt":[
                            "OnBlockFunction",
                            "Arn"
                        ]
                        },
                        { "Ref":"SAMAlias" }
                    ]
                ]
              }
            }
          ]
        }
      }
    },
    "OnReactionRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "RouteKey": "block",
        "AuthorizationType": "NONE",
        "OperationName": "OnReactionRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "OnReactionInteg"
              }
            ]
          ]
        }
      }
    },
    "OnReactionInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${function}/invocations",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "function": {
               "Fn::Join":[
                    ":",
                    [
                        {
                        "Fn::GetAtt":[
                            "OnReactionFunction",
                            "Arn"
                        ]
                        },
                        { "Ref":"SAMAlias" }
                    ]
                ]
              }
            }
          ]
        }
      }
    },
    "Deployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "ConnectRoute",
        "DisconnectRoute",
        "SendMessageRoute",
        "OnBlockRoute",
        "OnReactionRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "TestChatWebSocketApi"
        },
        "DeploymentId": {
          "Ref": "Deployment"
        },
        "StageName": {"Ref": "EnvironmentName"}
      }
    },
    "OnConnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "TestChatWebSocketApi",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt":[
                            "OnConnectFunction",
                            "Arn"
                        ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnDisconnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "TestChatWebSocketApi",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt":[
                            "OnDisconnectFunction",
                            "Arn"
                        ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SendMessagePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "TestChatWebSocketApi",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SendMessageFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnBlockPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "TestChatWebSocketApi",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnBlockFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "OnReactionPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "TestChatWebSocketApi",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OnReactionFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    }
  },
  "Outputs": {
    "WebSocketURI": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "wss://",
            {
              "Ref": "TestChatWebSocketApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            {
              "Ref": "Stage"
            }
          ]
        ]
      },
      "Description": "The WSS Protocol URI to connect to"
    }
  }
}